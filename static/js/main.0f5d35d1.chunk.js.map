{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/movieLoad.ts","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","FindMovie","props","addMovie","useState","loading","setLoading","movieToFind","setMovieToFind","movieFromServer","setMovieFromServer","movieExist","setMovieExist","loadMovieByTitle","a","fetch","then","response","ok","Error","status","statusText","json","newMovie","Response","Title","Plot","Poster","imdbID","error","console","log","message","onSubmit","e","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","App","data","setMovies","find","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f5d35d1.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { loadMovie } from '../../api/movieLoad';\n\ninterface Props {\n  addMovie: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addMovie } = props;\n  const [loading, setLoading] = useState(false);\n  const [movieToFind, setMovieToFind] = useState('');\n  const [movieFromServer, setMovieFromServer] = useState<Movie | null>(null);\n  const [movieExist, setMovieExist] = useState(true);\n\n  const loadMovieByTitle = async () => {\n    try {\n      setLoading(true);\n      const newMovie = await loadMovie(movieToFind);\n\n      setLoading(false);\n      if (newMovie.Response === 'False') {\n        setMovieFromServer(null);\n        setMovieExist(false);\n\n        return;\n      }\n\n      const {\n        Title,\n        Plot,\n        Poster,\n        imdbID,\n      } = newMovie;\n\n      setMovieFromServer({\n        title: Title,\n        description: Plot,\n        imgUrl: Poster,\n        imdbUrl: `https://www.imdb.com/title/${imdbID}/`,\n        imdbId: imdbID,\n      });\n      setMovieExist(true);\n      setMovieToFind('');\n    } catch (e) {\n      const error = e as Error;\n      // eslint-disable-next-line\n      console.log(error.message);\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setMovieExist(true);\n    setMovieToFind(e.target.value);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    loadMovieByTitle();\n  };\n\n  const addNewMovie = () => {\n    if (movieFromServer) {\n      addMovie(movieFromServer);\n      setMovieFromServer(null);\n    }\n\n    setMovieToFind('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': !movieExist },\n              )}\n              value={movieToFind}\n              onChange={handleChange}\n            />\n          </div>\n\n          {!movieExist && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addNewMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {\n          loading ? (\n            <h2>Loading...</h2>\n          ) : (\n            movieFromServer && (\n              <>\n                <h2 className=\"title\">Preview</h2>\n                <MovieCard {...movieFromServer} />\n              </>\n            )\n          )\n        }\n      </div>\n    </>\n  );\n};\n","const BASE_URL = 'http://www.omdbapi.com/?apikey=de16e785';\n\nexport const loadMovie = (title: string) => {\n  return fetch(`${BASE_URL}&t=${title}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(data);\n  const addMovie = (newMovie: Movie) => {\n    if (!movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      setMovies(current => [...current, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}